let combineWithMathJax,VERSION,module1,module2,module3,module4,module5,module6,module7;_26e‍.w("../../../../../js/components/global.js",[["combineWithMathJax",["combineWithMathJax"],function(v){combineWithMathJax=v}]]);_26e‍.w("../../../../../js/components/version.js",[["VERSION",["VERSION"],function(v){VERSION=v}]]);_26e‍.w("../../../../../js/adaptors/liteAdaptor.js",[["*",null,function(v){module1=v}]]);_26e‍.w("../../../../../js/adaptors/lite/Document.js",[["*",null,function(v){module2=v}]]);_26e‍.w("../../../../../js/adaptors/lite/Element.js",[["*",null,function(v){module3=v}]]);_26e‍.w("../../../../../js/adaptors/lite/List.js",[["*",null,function(v){module4=v}]]);_26e‍.w("../../../../../js/adaptors/lite/Parser.js",[["*",null,function(v){module5=v}]]);_26e‍.w("../../../../../js/adaptors/lite/Text.js",[["*",null,function(v){module6=v}]]);_26e‍.w("../../../../../js/adaptors/lite/Window.js",[["*",null,function(v){module7=v}]]);










if (MathJax.loader) {
  MathJax.loader.checkVersion('adaptors/liteDOM', VERSION, 'adaptors');
}

combineWithMathJax({_: {
  adaptors: {
    liteAdaptor: module1,
    lite: {
      Document: module2,
      Element: module3,
      List: module4,
      Parser: module5,
      Text: module6,
      Window: module7
    }
  }
}});
